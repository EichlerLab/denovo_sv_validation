import numpy as np
import pandas as pd
from Bio import SeqIO
import re
from pybedtools import BedTool
import os
import io


#
# Definitions
#


configfile: "config/config.yaml"


samples_df = pd.read_csv(
    config.get("manifest", "config/pedigree.tab"), sep="\t", index_col="SAMPLE"
)

REF_FA = config["REF"]
MSA_ALG = config.get("MSA_ALG", "mafft")


include: "rules/common.smk"
include: "rules/subseq.smk"
include: "rules/msa.smk"
include: "rules/callable.smk"
include: "rules/svpop_int.smk"
include: "rules/combine.smk"


val_methods = ["READS", "ASM", "SVPOP", "CALLABLE"]
val_types = []

for x in val_methods:
    if x not in config:
        continue
    for y in config[x]:
        val_types.append(y)


localrules:
    all,


wildcard_constraints:
    val_type="|".join(val_types),
    vartype="sv|indel",
    svtype="ins|del|insdel",


rule all:
    input:
        expand("dn_val/{sample}_valid_table.tsv", sample=samples_df.index),
